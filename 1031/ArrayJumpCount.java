package tw.com.deyi.d1031;

public class ArrayJumpCount {

	public static void main(String[] args) { 
		// 2	3     0    1 	 0   3    0    0     3     1    2
			String[][] maps = new String[][] { 
	{ "▇", "▇", "▇", "▇", "▇","▇","▇", "▇",	"▇", "▇", "▇" },
	{ "▇", "▇", "▇", "▇", "▇","▇","▇", "▇",	"▇", "▇", "〇" },
	{ "▇", "▇", "▇", "▇", "▇","〇","▇", "▇",	"▇", "▇", "〇" },
	{ "▇", "〇", "▇", "▇", "▇","〇","▇", "▇",	"▇", "〇", "〇" },
	{ "▇", "〇", "▇", "▇", "▇","〇","▇", "▇",	"〇", "〇", "〇" },
	{ "▇", "〇", "▇", "〇", "╳",	"〇","▇", "╳",	"〇", "〇", "〇" },
	{ "〇", "〇", "〇", "〇", "〇","〇","▇", "〇",	"〇", "〇", "〇" },
	{ "〇", "〇", "〇", "〇", "〇","〇","〇", "〇",	"〇", "〇", "〇" },
		
	
		};
			// 執行結果:15
					
			int o = 0;//〇計算容器
			int[] o1 = new int[maps[0].length];//填入一列存在的〇
			int x = 0;//╳計算容器
			int[] x1 = new int[maps[0].length];//若出現X的列填入1
			int sum = 0;//總和跳的次數
			int key = 0;//紀錄目前位置(〇格數)

			for (int j = 0; j < maps[0].length; j++) {//以行打印迴圈
				for (int i = 0; i < maps.length; i++) {//以列打印迴圈
					if (maps[i][j] == "〇") {//判斷列中的"〇"
						o += 1;//同列"〇"紀錄+1
					} else if (maps[i][j] == "╳") {//紀錄是否有"╳"有的化1標記
						x = 1;
					}
				}
				
				o1[j] = o;//將整列O存入容器中
				x1[j] = x;//將出現X的列存入容器中
				o = 0;//清除〇記錄用容器
				x = 0;//清除X記錄用容器
			}
				sum = o1[0];//總和先從起點做紀錄
				key = o1[0];//位置先為起點
			for (int j =1; j < maps[0].length; j++) {
				if (key < o1[j]&& x1[j] != 1) {//判斷目前位置格數是否小於下一位的O格數，並且不能有X
					sum += o1[j] - key;//成立總和就增加"增加的格數"。起始列2格+(下一列5格-起始列2格)
					key = o1[j];//得到的結果 成為目前新的位置
				} else if (key > o1[j] && x1[j] != 1) {//判斷目前位置是否大於下一列，並且不能有X
					key = o1[j];//得到的結果 成為目前新的位置
				} else if(j>0&& x1[j] != 1) {//判斷是否為第一列且列中沒有1記號
					key = o1[j - 1];//否則不往前增加位置格數
				}else {//否則為第0列 起點格數不變
					key = o1[0];
				}
				
			}
			System.out.println("總共往上跳了: " + sum + " 次");
		}

	}